{"version":3,"sources":["components/Auth/auth.module.css","components/DrumSequencer/Frame/frame.js","components/DrumSequencer/Cell/cell.js","components/DrumSequencer/Grid/grid.js","utils/MidiQueries.js","utils/MidiUtils.js","UI/Modal/Modal.js","UI/Button/Button.js","UI/NumberInput/NumberInput.js","UI/SaveForm/SaveForm.js","UI/Spinner/Spinner.js","store/actions/midi.js","store/actions/actionTypes.js","components/DrumSequencer/DrumSequencer.js","UI/Logo/Logo.js","components/Navbar/Navbar.js","UI/PageHeader/PageHeader.js","utils/AuthQueries.js","components/Auth/Login/Login.js","store/actions/auth.js","components/Auth/ResetPassword/ResetPassword.js","components/Auth/Logout/Logout.js","components/Auth/Signup/Signup.js","components/Auth/Account/Account.js","UI/PushButton/PushButton.js","components/Midi/MidiCards/MidiCard/MidiCard.js","UI/CollectionHeader/CollectionHeader.js","containers/JukeBox/Jukebox.js","containers/MyBeats/MyBeats.js","containers/MidiCollections/MidiCollections.js","App.js","serviceWorker.js","store/reducers/midi.js","store/reducers/auth.js","store/reducers/index.js","index.js","components/DrumSequencer/drumseqencer.module.css","components/Navbar/navbar.module.css","UI/Modal/modal.module.css","UI/SaveForm/save.module.css","UI/Button/button.module.css","UI/NumberInput/numberinput.module.css","UI/Logo/logo.module.css","assets/images/midi_mason_logo_white.png","UI/PageHeader/pageheader.module.css"],"names":["module","exports","Frame","styled","div","props","columns","rows","getBackground","activated","triggered","hovered","darken","getBoxShadow","Cell","attrs","style","column","row","Grid","totalTracks","totalSteps","sequence","map","line","i","time","j","key","onClick","toggleStep","onMouseOver","hoverStep","onMouseLeave","hoverOffStep","getMidiFiles","params","a","axios","get","then","res","data","catch","err","console","log","createMidiFile","mididata","post","deleteMidiFile","id","userId","delete","updateMidiFile","put","generateDrumRNN","getUniqueMidiFileFieldValues","field","midiTrackMapping","36","38","42","45","46","48","49","50","51","trackMidiMapping","0","1","2","3","4","5","6","7","8","convertMidiSequenceToPattern","midiSeq","emptyPattern","Array","fill","pattern","JSON","parse","stringify","item","currentStep","currentPitch","convertPatternToMidiSequence","midi_sequence","track","track_num","step","step_num","midi_info_step","push","convertPatternToPrimerSequence","empty_primer_sequence","length","primer_sequence","pitch","replace","Modal","size","aria-labelledby","centered","className","classes","Body","ModalBody","type","onHide","aria-label","aria-hidden","title","children","Button","buttonStyling","Inverted","InvertedButton","buttonType","NumberInput","clearTimers","clearTimeout","timeout","clearInterval","interval","setNativeValue","element","value","valueSetter","Object","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","call","increment_button","document","getElementById","this","addEventListener","e","Event","bubbles","input","parseInt","dispatchEvent","setTimeout","setInterval","decrement_button","min","max","min_input_height","onChange","onChangeHandler","Arrows","button_width","Component","SaveForm","state","saveForm","name","genre","generatedSteps","errors","inputChangeHandler","event","target","currentValue","isNaN","setState","prevState","Fragment","Error","onSubmit","onSavePattern","control","placeholder","required","totalsteps","button_text","Spinner","text","setMidiSequencerData","midiData","DrumSequencer","bpm","volume","startSeq","drumOrder","showSaveModal","showGeneratingModal","showDownloadModal","showUpdateModal","isSaving","isGenerating","isUpdating","maxSteps","generateDisabled","isDownloadable","sequence_title","authorName","startSequencer","steps","v","drumSeq","Tone","Sequence","patternCopy","player","start","loop","clearTriggers","patternUpdated","clearSteps","handleToggleStep","handleHoverOnStep","handleHoverOffStep","handleStartStop","Transport","stop","clear","handleStepCountChange","new_steps","current_steps","trackCopy","pop","disableGenerateButton","handleTempoChange","new_bpm","handleSaveModalShow","handleSaveModalHide","handleDownloadModalShow","handleDownloadModalHide","handleGeneratingModalShow","handleGeneratingModalHide","handleUpdateModalShow","isUpdateable","request_body","midiId","tempo","url","handleUpdateModalHide","handleSavePattern","formData","preventDefault","author_name","handleAIDrumGeneration","primer_sequence_str","Master","Players","BD","S1","HC","OH","TL","TM","TH","S2","RD","toMaster","prevProps","cancel","midi_data","TransportItem","TransportItemInput","disabled","href","download","show","isLoggedIn","color","connect","midi","auth","dispatch","midiActions","Logo","src","midiMasonLogo","width","logo_size","height","StickyNavbar","isHovered","isScrolling","navBarClasses","MainBar","mobile_navbar_active","handleStickyNavbar","page_position","window","pageYOffset","nav","getBoundingClientRect","top","scrollY","MainBarSticky","handleOnHover","handleOffHover","handleMobileNavbarTransition","innerWidth","openNav","closeNav","removeEventListener","NavbarMobile","NavbarMobileItems","data-header-nav-toggle","focusable","role","xmlns","viewBox","fill-rule","d","subtitle","to","join","Navbar","NavbarLeft","NavbarMiddle","NavbarRight","PageHeader","sendLoginRequest","userCreds","signup","Login","loginForm","email","password","loginHandler","response","token","userData","userAccessToken","setUserData","Auth","redirect","accessToken","authActions","ResetPassword","forgotPasswordForm","success","forgotPasswordHandler","Success","Logout","userLogout","Signup","signupForm","userName","confirmedPassword","isSignedUp","signupHandler","confirmPassword","Account","userForm","submitHandler","PushButton","styles","fadeIn","animation","animationName","Radium","keyframes","MidiCard","authorId","seq","handlePlayDrumSequencer","onDelete","CollectionHeader","data-heading","Jukebox","THRESHOLD","MAX_SPEED","LEFT","RIGHT","midiFiles","isLoading","enableGalleryScroll","gallery","onmouseover","speed","pageX","clientX","screenX","screenWidth","currentPosPercentage","calculateSpeed","setScroll","endScroll","direction","ratio","scrolling","object","newPos","scrollLeft","handleDeletePattern","midiFilesCopy","midiFilesUpdated","filter","midifile","_id","toString","alert","midiFileElements","index","author","filterParams","limit","MidiCollections","useState","genres","setGenres","useEffect","all_genres","getAllGenres","genreElements","App","path","render","exact","Boolean","location","hostname","match","initialState","reducer","action","combineReducers","midiReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c96dabef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"auth_Auth__SUdHM\",\"Error\":\"auth_Error__36BLA\",\"Success\":\"auth_Success__3dQUG\"};","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Frame = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.columns}, 1fr);\n  grid-template-rows: repeat(${props => props.rows}, 1fr);\n  width: 100%;\n  height: calc(85vh - 60px);\n  background:#28282c;\n\n`;\n\nexport default Frame;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { darken } from \"polished\";\n\nconst getBackground = (activated, triggered, hovered) => {\n  switch (true) {\n    case hovered && !activated && !triggered:\n      return \"#42424a\"\n    case activated && triggered:\n      return darken(0.2, \"#0087ff\");\n    case activated && !triggered:\n      return \"#0087ff\";\n    case !activated && triggered:\n      return \"#42424a\";\n    default:\n      return \"#36363c\";\n  }\n};\n\nconst getBoxShadow = (activated) => {\n  switch (true) {\n    case activated:\n      return \"0 0 10px 0 rgba(0,135,255,0.8)\";\n    default:\n      return \"0 1px 3px 0 rgba(0,0,0,0.3)\";\n  }\n};\n\nconst Cell = styled.div.attrs(({ activated, triggered, hovered }) => ({\n  style: {\n    'background': getBackground(activated, triggered, hovered),\n    'box-shadow': getBoxShadow(activated)\n}\n}))`\n  border-radius: 10px;\n  grid-column: ${props => props.column};\n  grid-row: ${props => props.row};\n  margin: 7px; \n  transition:background .1s ease;\n  @media (max-width: 768px) {\n       margin: 2px; \n  }\n`;\n\n\nexport default Cell;\n","import React from \"react\";\nimport Frame from \"../Frame/frame\";\nimport Cell from \"../Cell/cell\";\n\nconst Grid = (props) => (\n  <Frame rows={props.totalTracks} columns={props.totalSteps}>\n    {props.sequence.map((line, i) =>\n      line.map((time, j) => (\n        <Cell\n          key={i + j}\n          column={j + 1}\n          row={i + 1}\n          activated={props.sequence[i][j][\"activated\"]}\n          triggered={props.sequence[i][j][\"triggered\"]}\n          hovered={props.sequence[i][j][\"hovered\"]}\n          onClick={() => props.toggleStep(i, j)}\n          onMouseOver={() => props.hoverStep(i, j)}\n          onMouseLeave={() => props.hoverOffStep(i, j)}\n        />\n      ))\n    )}\n  </Frame>\n);\n\nexport default Grid;\n","import React from 'react';\nimport axios from 'axios';\n\nexport const getMidiFiles = async (params) => {\n    return (\n        axios.get('/api/v1/midi',{params})\n            .then(res => {\n                return res.data.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\nexport const createMidiFile = async (mididata) => {\n    return (\n        axios.post('/api/v1/midi', mididata)\n            .then(res => {\n                return res.data.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\n\nexport const deleteMidiFile = async (id, userId) => {\n    return (\n        axios.delete('/api/v1/midi/'+ id + \"?userId=\" + userId)\n            .then(res => {\n                return res.data.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\nexport const updateMidiFile = async (id, mididata) => {\n    return (\n        axios.put('/api/v1/midi/'+ id, mididata)\n            .then(res => {\n                return res.data.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\n\nexport const generateDrumRNN = async (mididata) => {\n    return (\n        axios.post('/api/v1/midi/generate_drum_rnn', mididata)\n            .then(res => {\n                return res.data.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\nexport const getUniqueMidiFileFieldValues = async (field) => {\n    return (\n        axios.get('/api/v1/midi/fields/' + field)\n            .then(res => {\n                return res.data.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\n\n\n","const midiTrackMapping = { 36:0, 38:1, 42:2, 45:3, 46:4, 48:5, 49:6, 50:7, 51:8 }\nconst trackMidiMapping = { 0:36, 1:38, 2:42, 3:45, 4:46, 5:48, 6:49, 7:50, 8:51 }\n\nexport const convertMidiSequenceToPattern = (midiSeq, totalSteps) => {\n    const totalTracks = 9;\n    const emptyPattern = Array(totalTracks)\n        .fill(new Array(totalSteps)\n            .fill({ triggered: false, activated: false }));\n    const pattern = JSON.parse(JSON.stringify(emptyPattern));\n    midiSeq.map(item => {\n        const currentStep = item['quantized_start_step'];\n        const currentPitch = item['pitch'];\n        const currentTrack = midiTrackMapping[currentPitch];\n        pattern[currentTrack][currentStep]['activated'] = true;\n    })\n    return pattern;\n};\n\nexport const convertPatternToMidiSequence = (pattern) => {\n    const midi_sequence = [];\n    pattern.map((track, track_num) => {\n         track.map((step, step_num) => {\n            const midi_info_step = {}\n            if(step['activated']){\n                midi_info_step['pitch'] = trackMidiMapping[track_num]\n                midi_info_step['velocity'] = 100\n                midi_info_step['quantized_start_step'] = step_num\n                midi_sequence.push(midi_info_step)\n            }\n        })\n    })\n    return midi_sequence;\n};\n\nexport const convertPatternToPrimerSequence = (pattern) => {\n    const empty_primer_sequence = Array(pattern[0].length).fill([]);\n    const primer_sequence = JSON.parse(JSON.stringify(empty_primer_sequence));\n    pattern.map((track, track_num) => {\n        track.map((step, step_num) => {\n            if(step['activated']){\n                const pitch = trackMidiMapping[track_num]\n                primer_sequence[step_num].push(pitch);\n            }\n        })\n    })\n    const primer_sequence_str = JSON.stringify(primer_sequence)\n        .replace(/\\[/g,\"(\")\n        .replace(/\\]/g,\")\")\n        .replace(/^\\(/,\"[\")\n        .replace(/\\)$/,\"]\")\n        .replace(/\\(([0-9][0-9])\\)/g, \"($1,)\")\n    return primer_sequence_str;\n};\n","import React from 'react';\nimport BSModal from 'react-bootstrap/Modal';\nimport classes from './modal.module.css';\n\nconst Modal = (props) => {\n    return (\n        <BSModal\n            {...props}\n            size=\"sm\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            className={classes.Modal}\n        >\n            <BSModal.Body className={classes.ModalBody}>\n                <button\n                    id=\"modalclosebutton\"\n                    type=\"button\" className=\"close\"\n                    onClick={props.onHide}\n                    aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n                {props.title ? <h4>{props.title}</h4> : null}\n                {props.children}\n            </BSModal.Body>\n        </BSModal>\n    );\n};\n\nexport default Modal;\n","import React from 'react';\nimport classes  from './button.module.css';\n\nconst Button = (props) => {\n    const buttonStyling = props.Inverted ? classes.InvertedButton : classes.Button;\n    const buttonType = props.type ? props.type : \"button\";\n    return (\n            <button\n                className={buttonStyling}\n                type={buttonType}\n                onClick={props.onClick}\n            >\n                {props.title}\n            </button>\n    );\n};\n\n\nexport default Button;\n","import classes from './numberinput.module.css';\nimport React, {Component} from 'react';\n\nclass NumberInput extends Component {\n    timeout;\n    interval;\n    componentDidMount() {\n\n        const increment_button = document.getElementById(this.props.id + \"_increment_btn\")\n        increment_button.addEventListener('click', () => {\n            const e = new Event('input', { bubbles: true })\n            const input = document.getElementById(this.props.id)\n            this.setNativeValue(input, parseInt(this.props.value) + 1);\n            input.dispatchEvent(e)\n        })\n        increment_button.addEventListener('mousedown', () => {\n            const e = new Event('input', { bubbles: true })\n            const input = document.getElementById(this.props.id)\n            this.timeout = setTimeout(() => {\n                this.interval = setInterval(() => {\n                    this.setNativeValue(input, parseInt(this.props.value) + 1);\n                    input.dispatchEvent(e)\n                }, 80);\n            }, 300);\n        })\n        increment_button.addEventListener('mouseup', this.clearTimers);\n        increment_button.addEventListener('mouseleave', this.clearTimers);\n\n        const decrement_button = document.getElementById(this.props.id + \"_decrement_btn\")\n        decrement_button.addEventListener('click', () => {\n            const e = new Event('input', { bubbles: true })\n            const input = document.getElementById(this.props.id)\n            this.setNativeValue(input, parseInt(this.props.value) - 1);\n            input.dispatchEvent(e)\n        })\n        decrement_button.addEventListener('mousedown', () => {\n            if(this.props.min > parseInt(this.props.value) || parseInt(this.props.value) > this.props.max) {\n                return\n            }\n            const e = new Event('input', { bubbles: true })\n            const input = document.getElementById(this.props.id)\n            this.timeout = setTimeout(() => {\n                this.interval = setInterval(() => {\n                    this.setNativeValue(input, parseInt(this.props.value) - 1);\n                    input.dispatchEvent(e)\n                }, 70);\n            }, 300);\n        })\n        decrement_button.addEventListener('mouseup', this.clearTimers);\n        decrement_button.addEventListener('mouseleave', this.clearTimers);\n    }\n\n    clearTimers = () => {\n        clearTimeout(this.timeout);\n        clearInterval(this.interval);\n    }\n\n\n    setNativeValue = (element, value) => {\n        const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n        const prototype = Object.getPrototypeOf(element);\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\n\n        if (valueSetter && valueSetter !== prototypeValueSetter) {\n            prototypeValueSetter.call(element, value);\n        } else {\n            valueSetter.call(element, value);\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.NumberInput}>\n                <input\n                    style={{'min-height':this.props.min_input_height}}\n                    id={this.props.id}\n                    type=\"number\"\n                    value={this.props.value}\n                    onChange={this.props.onChangeHandler}\n                />\n                <div className={classes.Arrows}>\n                    <button style={{'width':this.props.button_width}} id={this.props.id + \"_increment_btn\"} type={\"button\"} >\n                        <i className=\"fa fa-caret-up\"/></button>\n                    <button style={{'width':this.props.button_width}}  id={this.props.id + \"_decrement_btn\"} type={\"button\"} >\n                        <i className=\"fa fa-caret-down\"/></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NumberInput;\n","import React, {Component} from 'react';\nimport classes from './save.module.css';\nimport Button from \"../Button/Button\";\nimport NumberInput from \"../NumberInput/NumberInput\";\n\nclass SaveForm extends Component {\n    state = {\n        saveForm: {\n            name: {\n                value: '',\n            },\n            genre: {\n                value: '',\n            },\n            generatedSteps: {\n                value: this.props.min\n            }\n        },\n        errors:null,\n    };\n\n    inputChangeHandler = (event) => {\n        const input = event.target.id;\n        const currentValue = event.target.value;\n        if(!isNaN(currentValue)){\n            if(this.props.min > parseInt(currentValue) || parseInt(currentValue) > this.props.max) {\n                return\n            }\n        }\n        this.setState(prevState => {\n            const updatedForm = {\n                ...prevState.saveForm,\n                [input]: {\n                    ...prevState.saveForm[input],\n                    value: currentValue\n                }\n            };\n            return {saveForm: updatedForm, errors: null};\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={classes.Error}>\n                    {this.state.errors}\n                </div>\n                <div className={classes.SaveForm}>\n                    <form onSubmit={e => this.props.onSavePattern(e, {\n                        name: this.state.saveForm.name.value,\n                        genre: this.state.saveForm.genre.value,\n                        generatedSteps: this.state.saveForm.generatedSteps.value\n                    })}>\n                        <label>Pattern Name</label>\n                        <input\n                        id=\"name\"\n                        type=\"name\"\n                        control=\"input\"\n                        className=\"form-control\"\n                        placeholder=\"Enter name\"\n                        value={this.state.saveForm['name'].value}\n                        onChange={this.inputChangeHandler}\n                        required={true}\n                        />\n                        <label>Genre</label>\n                        <input\n                        id=\"genre\"\n                        type=\"genre\"\n                        control=\"input\"\n                        className=\"form-control\"\n                        placeholder=\"Genre\"\n                        value={this.state.saveForm['genre'].value}\n                        onChange={this.inputChangeHandler}\n                        required={true}\n                        />\n                        {this.props.totalsteps ?\n                            <React.Fragment>\n                                <label>Total Step</label>\n                                <NumberInput\n                                    id={\"generatedSteps\"}\n                                    value={this.state.saveForm['generatedSteps'].value}\n                                    onChangeHandler={this.inputChangeHandler}\n                                    min_input_height={'80px'}\n                                    button_width={'100%'}\n                                />\n                            </React.Fragment>\n                            :\n                            null\n                        }\n                        <br/>\n                        <Button type={'submit'} title={this.props.button_text} Inverted={true}/>\n                    </form>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default SaveForm;","import React from 'react';\nimport \"./spinner.css\";\n\nconst Spinner = (props) => {\n    return (\n        <div className=\"spinner\">\n            <div className=\"loader\"/>\n            <h5>{props.text}</h5>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const setMidiSequencerData = (midiData) => {\n    return {\n        type:actionTypes.SET_MIDI_SEQUENCER_DATA,\n        midiData: midiData\n    };\n};\n","export const SET_MIDI_SEQUENCER_DATA = 'SET_MIDI_SEQUENCER_DATA';\nexport const SET_USER_DATA = 'SET_USER_DATA';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n","import React, { Component } from 'react';\nimport Tone from 'tone';\nimport Grid from './Grid/grid';\nimport classes from './drumseqencer.module.css';\nimport {connect} from 'react-redux';\nimport {createMidiFile, generateDrumRNN, updateMidiFile} from \"../../utils/MidiQueries\";\nimport {\n    convertMidiSequenceToPattern,\n    convertPatternToMidiSequence,\n    convertPatternToPrimerSequence\n} from \"../../utils/MidiUtils\";\nimport Modal from \"../../UI/Modal/Modal\";\nimport SaveForm from \"../../UI/SaveForm/SaveForm\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport * as midiActions from \"../../store/actions\";\nimport NumberInput from \"../../UI/NumberInput/NumberInput\";\n\nclass DrumSequencer extends Component {\n    state = {\n        bpm: this.props.bpm,\n        volume: -6,\n        totalSteps: this.props.totalSteps,\n        totalTracks: 9,\n        startSeq: false,\n        pattern: this.props.pattern,\n        drumOrder : ['BD', 'S1', 'HC', 'OH', \"TL\", \"TM\", \"TH\", \"S2\", \"RD\"],\n        showSaveModal:false,\n        showGeneratingModal: false,\n        showDownloadModal: false,\n        showUpdateModal: false,\n        isSaving: false,\n        isGenerating: false,\n        isUpdating: false,\n        maxSteps: 64,\n        generateDisabled:false,\n        isDownloadable: this.props.isDownloadable,\n        sequence_title: this.props.sequence_title,\n        authorName: this.props.authorName\n    };\n\n    constructor(props) {\n        super(props);\n        Tone.Transport.bpm.value = this.state.bpm;\n        Tone.Master.volume.value = this.state.volume;\n\n        this.player = new Tone.Players(\n            {\n                BD: \"./audio/kit_1/kick.wav\",\n                S1: \"./audio/kit_1/snare1.wav\",\n                HC: \"./audio/kit_1/hh_closed.wav\",\n                OH: \"./audio/kit_1/hh_open.wav\",\n                TL: \"./audio/kit_1/tom_low.wav\",\n                TM: \"./audio/kit_1/tom_mid.wav\",\n                TH: \"./audio/kit_1/tom_hi.wav\",\n                S2: \"./audio/kit_1/snare2.wav\",\n                RD: \"./audio/kit_1/ride.wav\",\n            }).toMaster()\n    }\n\n    componentWillMount(){\n\n        if(this.state.pattern.length < 1) {\n            const pattern = Array(this.state.totalTracks)\n                .fill(new Array(this.state.totalSteps)\n                    .fill({triggered: false, activated: false}));\n            this.setState({pattern: pattern})\n        }\n    }\n    componentDidUpdate(prevProps, prevState){\n        const patternHasChanged = prevState.totalSteps !== this.state.totalSteps;\n        if(patternHasChanged) {\n            Tone.Transport.cancel()\n            this.clearTriggers()\n            this.startSequencer()\n        }\n        if (prevProps !== this.props) {\n            this.setState({\n                bpm : this.props.bpm,\n                totalSteps: this.props.totalSteps,\n                pattern: this.props.pattern,\n                url: this.props.url,\n                isDownloadable: true\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        if(this.state.startSeq){\n            this.handleStartStop();\n        }\n        const midi_data = {\n            bpm: this.state.bpm,\n            totalSteps: this.state.totalSteps,\n            pattern: this.state.pattern,\n            url: this.props.url,\n            sequence_title: this.state.sequence_title,\n            isDownloadable: this.state.isDownloadable,\n            isUpdateable: this.props.isUpdateable,\n            midiId: this.props.midiId,\n            authorName : this.state.authorName\n        }\n        this.props.setMidiSequencerData(midi_data);\n    }\n\n\n    startSequencer = () => {\n        const steps = new Array(this.state.totalSteps).fill(1).map((v, i) => {\n            return i;\n        });\n        this.drumSeq = new Tone.Sequence((time, step) => {\n            const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n            patternCopy.map((track, i) => {\n                const activated = track[step]['activated'];\n                if(step === 0){\n                    patternCopy[i][track.length - 1] = {\n                        triggered: false,\n                        activated: patternCopy[i][track.length - 1]['activated']\n                    }\n                }\n                else{\n                    patternCopy[i][step - 1] = {\n                        triggered: false,\n                        activated:  patternCopy[i][step - 1]['activated']\n                    }\n                }\n                patternCopy[i][step] = { triggered: true, activated: activated}\n\n                if (activated) {\n                    this.player.get(this.state.drumOrder[i]).start()\n                }\n            })\n            this.setState({pattern: patternCopy});\n\n        }, steps, \"16n\");\n        this.drumSeq.loop = true;\n        this.drumSeq.start()\n    }\n\n    clearTriggers = () => {\n        const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n        const patternUpdated = patternCopy.map(track => {\n            return track.map(step => {\n                const updatedStep = {triggered:false, activated: step['activated']}\n                return updatedStep\n            })\n        })\n        this.setState({pattern: patternUpdated});\n    }\n\n    clearSteps = () => {\n        const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n        const patternUpdated = patternCopy.map(track => {\n            return track.map(step => {\n                const updatedStep = {triggered:false, activated: false}\n                return updatedStep\n            })\n        })\n        this.setState({pattern: patternUpdated, isDownloadable:false, sequence_title:\"\", authorName:\"\"});\n    }\n\n    handleToggleStep = (line, step) => {\n        const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n        const { triggered, activated } = patternCopy[line][step];\n        patternCopy[line][step] = { triggered, activated: !activated };\n        this.setState({pattern: patternCopy, isDownloadable:false});\n    };\n\n    handleHoverOnStep = (line, step) => {\n        const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n        const { triggered, activated } = patternCopy[line][step];\n        patternCopy[line][step] = { triggered, activated, hovered: true};\n        this.setState({pattern: patternCopy});\n    };\n\n    handleHoverOffStep = (line, step) => {\n        const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n        const { triggered, activated } = patternCopy[line][step];\n        patternCopy[line][step] = { triggered, activated, hovered: false};\n        this.setState({pattern: patternCopy});\n    };\n\n    handleStartStop = () => {\n        this.setState({startSeq:!this.state.startSeq})\n\n        if(!this.state.startSeq) {\n            this.startSequencer()\n            Tone.Transport.start()\n        }\n        else{\n            Tone.Transport.stop()\n            Tone.Transport.clear()\n            this.drumSeq.stop()\n            this.clearTriggers()\n        }\n    }\n\n    handleStepCountChange = (e) => {\n        const patternCopy = JSON.parse(JSON.stringify(this.state.pattern));\n        const new_steps = parseInt(e.target.value);\n        if(new_steps < 1 || new_steps > 64 ){\n            return false\n        }\n        else if (isNaN(new_steps)){\n            this.setState({totalSteps: 1});\n            return false\n        }\n\n        const current_steps = patternCopy[0].length;\n        const patternUpdated = patternCopy.map(track => {\n            const trackCopy = JSON.parse(JSON.stringify(track));\n            if(new_steps < current_steps){\n                trackCopy.pop()\n            }\n            else{\n                trackCopy.push({ triggered: false, activated:false })\n            }\n            return trackCopy\n        })\n\n        let disableGenerateButton = false;\n        if(this.state.totalSteps + 3 > this.state.maxSteps) {\n            disableGenerateButton = true;\n        }\n        this.setState({\n            totalSteps: new_steps,\n            pattern: patternUpdated,\n            generateDisabled:disableGenerateButton,\n            isDownloadable: false\n        });\n    }\n\n    handleTempoChange = (e) => {\n        const new_bpm = parseInt(e.target.value);\n\n        if(new_bpm < 20 || new_bpm > 200 ){\n            return\n        }\n        Tone.Transport.bpm.value = new_bpm;\n        this.setState({bpm: new_bpm, isDownloadable: false});\n    }\n\n    handleSaveModalShow = () => {\n        this.setState({showSaveModal:true});\n    };\n\n    handleSaveModalHide = () => {\n        this.setState({showSaveModal:false});\n    };\n\n    handleDownloadModalShow = () => {\n        if(!this.state.isDownloadable){\n            this.setState({showDownloadModal:true});\n        }\n    };\n\n    handleDownloadModalHide = () => {\n        this.setState({showDownloadModal:false});\n    };\n\n\n    handleGeneratingModalShow = () => {\n        this.setState({showGeneratingModal:true});\n    };\n\n    handleGeneratingModalHide = () => {\n        this.setState({showGeneratingModal:false});\n    };\n\n    handleUpdateModalShow = async () => {\n        this.setState({showUpdateModal:true});\n\n        if(this.props.isUpdateable){\n            this.setState({isUpdating:true});\n            const midi_sequence = convertPatternToMidiSequence(this.state.pattern);\n\n            const request_body = {\n                \"userId\": this.props.userId,\n                \"midi_sequence\": midi_sequence,\n                \"length\": this.state.totalSteps,\n                \"tempo\": this.state.bpm,\n            }\n\n            const data = await updateMidiFile(this.props.midiId, request_body);\n            if(data){\n                const pattern = convertMidiSequenceToPattern(data.midi_sequence, data.length);\n                const midiData = {\n                    bpm : data.tempo,\n                    totalSteps: data.length,\n                    pattern: pattern,\n                    url: data.url,\n                    isDownloadable: true,\n                    isUpdateable: true,\n                    sequence_title: this.state.sequence_title,\n                    midiId: this.props.midiId,\n                    authorName : this.state.authorName\n                }\n                this.props.setMidiSequencerData(midiData);\n            }\n            this.handleUpdateModalHide();\n            this.setState({isUpdating:false});\n        }\n    }\n\n    handleUpdateModalHide = () => {\n        this.setState({showUpdateModal:false});\n    }\n\n    handleSavePattern = async (e, formData) => {\n        e.preventDefault();\n        Tone.Transport.stop()\n        Tone.Transport.clear()\n        this.setState({isSaving:true});\n        const midi_sequence = convertPatternToMidiSequence(this.state.pattern);\n\n        const request_body = {\n            \"userId\": this.props.userId,\n            \"midi_sequence\": midi_sequence,\n            \"length\": this.state.totalSteps,\n            \"tempo\": this.state.bpm,\n            \"genre\": formData.genre,\n            \"rating\": 5,\n            \"name\": formData.name\n        }\n        const data = await createMidiFile(request_body);\n        if(data){\n            const pattern = convertMidiSequenceToPattern(data.midi_sequence, data.length);\n            const midiData = {\n                bpm : data.tempo,\n                totalSteps: data.length,\n                pattern: pattern,\n                url: data.url,\n                isDownloadable: true,\n                isUpdateable: true,\n                sequence_title: formData.name,\n                midiId: this.props.midiId,\n                authorName : data.author_name\n            }\n            this.props.setMidiSequencerData(midiData);\n        }\n        this.handleSaveModalHide();\n        this.setState({isSaving:false, sequence_title: formData.name, authorName: data.author_name });\n    }\n\n    handleAIDrumGeneration = async (e, formData) => {\n        e.preventDefault();\n        Tone.Transport.stop()\n        Tone.Transport.clear()\n        this.setState({isGenerating:true});\n        const primer_sequence_str = convertPatternToPrimerSequence(this.state.pattern);\n        const request_body = {\n            \"userId\": this.props.userId,\n            \"primer_drums\": primer_sequence_str,\n            \"length\": formData.generatedSteps,\n            \"tempo\": this.state.bpm,\n            \"genre\": formData.genre,\n            \"rating\": 5,\n            \"name\": formData.name\n        }\n        const data = await generateDrumRNN(request_body);\n        if(data){\n            const pattern = convertMidiSequenceToPattern(data.midi_sequence, data.length);\n            const midiData = {\n                bpm : data.tempo,\n                totalSteps: data.length,\n                pattern: pattern,\n                url: data.url,\n                isDownloadable: true,\n                isUpdateable: true,\n                sequence_title: formData.name,\n                midiId: this.props.midiId,\n                authorName : data.author_name\n            }\n            this.props.setMidiSequencerData(midiData);\n        }\n        this.handleGeneratingModalHide();\n        this.setState({isGenerating:false, sequence_title: formData.name, authorName: data.author_name});\n    }\n\n    render() {\n        return (\n            <div className={classes.DrumSequencer}>\n                <h2>{this.state.sequence_title}</h2>\n                <h6>{this.state.authorName ? \"By \" + this.state.authorName : null}</h6>\n                <div className={classes.Transport}>\n                    <div className={classes.TransportItem}>\n                        <span>dummy</span>\n                        <button type=\"button\" onClick={this.handleStartStop}>{!this.state.startSeq ? \"Play\" : \"Stop\"}</button>\n                    </div>\n                    <div className={classes.TransportItemInput}>\n                        <label>Total Steps</label>\n                        <NumberInput id={\"totalSteps\"} value={this.state.totalSteps} onChangeHandler={this.handleStepCountChange} />\n                    </div>\n                    <div className={classes.TransportItemInput}>\n                        <label>BPM</label>\n                        <NumberInput id={\"bpm\"} value={this.state.bpm} onChangeHandler={this.handleTempoChange} />\n                    </div>\n                    <div className={classes.TransportItem}>\n                        <span>dummy</span>\n                        <button type=\"button\" onClick={this.handleGeneratingModalShow} disabled={this.state.generateDisabled}>Generate</button>\n                    </div>\n                    <div className={classes.TransportItem}>\n                        <span>dummy</span>\n                        <button type=\"button\" onClick={this.handleSaveModalShow}>Save</button>\n                    </div>\n                    <div className={classes.TransportItem}>\n                        <span>dummy</span>\n                        <button type=\"button\" onClick={this.handleUpdateModalShow}>Update</button>\n                    </div>\n                    <div className={classes.TransportItem}>\n                        <span>dummy</span>\n                        <a href={this.state.isDownloadable ? this.props.url : null} target=\"_blank\" download>\n                            <button type=\"button\" onClick={this.handleDownloadModalShow}>Download</button>\n                        </a>\n                    </div>\n                    <div className={classes.TransportItem}>\n                        <span>dummy</span>\n                        <button type=\"button\" onClick={this.clearSteps}>Clear</button>\n                    </div>\n                </div>\n                <Grid\n                    sequence={this.state.pattern}\n                    toggleStep={this.handleToggleStep}\n                    hoverStep={this.handleHoverOnStep}\n                    hoverOffStep={this.handleHoverOffStep}\n                    totalTracks={this.state.totalTracks}\n                    totalSteps={this.state.totalSteps}\n                />\n                <Modal\n                    show={this.state.showSaveModal}\n                    onHide={this.handleSaveModalHide}\n                    title=\"Save New Beat\" {...this.props}>\n                    {this.props.isLoggedIn ?\n                        !this.state.isSaving ?\n                        <SaveForm\n                            onSavePattern={this.handleSavePattern}\n                            button_text={\"Save Beat\"}/>\n                        :\n                        <Spinner text={\"Saving...\"}/>\n                    :\n                    <h1 style={{color:\"white\"}}>Please Login to Save a Beat.</h1>\n                    }\n                </Modal>\n                <Modal\n                    show={this.state.showUpdateModal}\n                    onHide={this.handleUpdateModalHide}\n                    title=\"Update Beat\" {...this.props}>\n                    {this.props.isLoggedIn ?\n                        this.state.isUpdating ?\n                            <Spinner text={\"Updating Beat...\"}/>\n                            :\n                            <h1 style={{color:\"white\"}}>Please Save the Beat Before Updating.</h1>\n                        :\n                        <h1 style={{color:\"white\"}}>Please Login to Update a Beat.</h1>\n                    }\n                </Modal>\n                <Modal\n                    show={this.state.showGeneratingModal}\n                    onHide={this.handleGeneratingModalHide}\n                    title=\"Generate AI Beat\" {...this.props}>\n                    {this.props.isLoggedIn ?\n                        !this.state.isGenerating ?\n                        <SaveForm\n                            onSavePattern={this.handleAIDrumGeneration}\n                            button_text={\"Generate AI Beat\"}\n                            totalsteps={true}\n                            min={this.state.totalSteps + 3}\n                            max={this.state.maxSteps}\n                        />\n                        :\n                        <Spinner text={\"Generating AI Beat...\"} />\n                    :\n                        <h1 style={{color:\"white\"}}>Please Login to Generate AI Midi Drums.</h1>\n                    }\n                </Modal>\n                <Modal\n                    show={this.state.showDownloadModal}\n                    onHide={this.handleDownloadModalHide}\n                    title=\"Download Beat\" {...this.props}>\n                    <h1 style={{color:\"white\"}}>Please Save or Update the Beat to Download it.</h1>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        midiId: state.midi.midiId,\n        authorName: state.midi.authorName,\n        bpm: state.midi.bpm,\n        totalSteps: state.midi.totalSteps,\n        pattern: state.midi.pattern,\n        isDownloadable: state.midi.isDownloadable,\n        isUpdateable: state.midi.isUpdateable,\n        url: state.midi.url,\n        sequence_title: state.midi.sequence_title,\n        userId: state.auth.userId,\n        isLoggedIn: state.auth.isLoggedIn\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMidiSequencerData: (midiData) => dispatch(midiActions.setMidiSequencerData(midiData))\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DrumSequencer);","import React from 'react';\nimport classes from './logo.module.css';\nimport midiMasonLogo from \"../../assets/images/midi_mason_logo_white.png\";\n\nconst Logo = (props) => {\n    return (\n        <div className={classes.Logo} style={{\"fontSize\":props.size +\"em\"}}>\n            <img src={midiMasonLogo} width={props.logo_size} height={props.logo_size}/>\n            <h4>Midi Mason</h4>\n        </div>\n    );\n};\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport classes from './navbar.module.css';\nimport {Link} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport './navbarMobile.css'\nimport Logo from \"../../UI/Logo/Logo\";\n\nclass StickyNavbar extends Component {\n    state = {\n        isHovered : false,\n        isScrolling: false,\n        navBarClasses: [classes.MainBar],\n        mobile_navbar_active: false\n    };\n\n    componentDidMount(){\n        window.addEventListener('scroll', this.handleStickyNavbar);\n        window.addEventListener('resize', this.handleMobileNavbarTransition);\n        this.handleMobileNavbarTransition();\n\n    }\n    componentWillUnmount(){\n        window.removeEventListener('scroll', this.handleStickyNavbar);\n        window.removeEventListener('resize', this.handleMobileNavbarTransition);\n\n    }\n\n    handleStickyNavbar = () => {\n        const page_position = window.pageYOffset;\n        let nav = false;\n        if(document.getElementById(\"mainlogo\")) {\n            nav = document.getElementById(\"mainlogo\").getBoundingClientRect().top + window.scrollY;\n        }\n\n        if (page_position==0){\n            this.setState({navBarClasses:[classes.MainBar], isScrolling:false});\n        }\n        else if (!nav || page_position > 80) {\n            this.setState({navBarClasses:[classes.MainBar, classes.MainBarSticky], isScrolling:true})\n        }\n\n    };\n\n    handleOnHover = () => {\n        this.setState({isHovered: true});\n    };\n\n    handleOffHover = () => {\n        this.setState({isHovered: false});\n    };\n\n\n    handleMobileNavbarTransition = () => {\n        if (window.innerWidth < 1100){\n            this.setState({mobile_navbar_active:true});\n        }\n        else{\n            this.setState({mobile_navbar_active:false});\n        }\n    };\n\n    openNav = ( ) => {\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\n    };\n\n    closeNav = () => {\n        document.getElementById(\"mySidenav\").style.width = \"0\";\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {!this.state.mobile_navbar_active ?\n                  <div className={this.state.navBarClasses.join(' ') } id=\"mainnavbar\">\n                      <nav className={classes.Navbar}  >\n                             <div className={classes.NavbarLeft}>\n                                 <Logo subtitle={false} logo_size=\"70\" size={\"2\"}/>\n                             </div>\n                             <div className={classes.NavbarMiddle}>\n                                 <Link onMouseOver={this.handleOffHover}  to=\"/\">Home</Link>\n                                 <Link onMouseOver={this.handleOffHover}  to=\"/sequencer\">Sequencer</Link>\n                                 <Link onMouseOver={this.handleOffHover}  to=\"/mybeats\">My Beats</Link>\n                            </div>\n                            <div className={classes.NavbarRight}>\n                                <Link to=\"/\"><i className=\"fa fa-home fa-2x\"></i></Link>\n                                <Link to=\"/login\"><i className=\"fa fa-user fa-2x\"></i></Link>\n                                {this.props.isLoggedIn ?\n                                    <Link to=\"/logout\"><i className=\"fa fa-sign-out fa-2x\"></i></Link>\n                                    :\n                                    null\n                                }\n                            </div>\n                        </nav>\n                 </div>\n                    :\n            <div className={classes.NavbarMobile}>\n                <div className={classes.NavbarMobileItems}>\n                    <button aria-label=\"Menu\"\n                            data-header-nav-toggle=\"\"\n                            onClick={this.openNav}>\n                                <span className=\"navigation-toggle-icon\">\n                                <svg aria-hidden=\"true\"\n                            focusable=\"false\"\n                            role=\"presentation\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"18\"\n                            height=\"30\"\n                            viewBox=\"0 0 18 18\">\n                                <path fill=\"currentColor\"\n                            fill-rule=\"evenodd\"\n                            d=\"M0 0h18v2H0zM0 5h18v2H0zM0 10h18v2H0z\"></path>\n                        </svg>\n                        </span>\n                    </button>\n                    <Logo subtitle={false} logo_size=\"0\" size={\"2\"} />\n             </div>\n                <div id=\"mySidenav\" className=\"sidenav\">\n                    <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.closeNav}>&times;</a>\n                    <Link onClick={this.closeNav} to=\"/\">Home</Link>\n                    <Link onClick={this.closeNav} to=\"/sequencer\">Sequencer</Link>\n                    <Link onClick={this.closeNav}  to=\"/mybeats\">My Beats</Link>\n\n                    {!this.props.isLoggedIn ?\n                        <React.Fragment>\n                            <Link onClick={this.closeNav} to=\"/login\">Login</Link>\n                            <Link onClick={this.closeNav} to=\"/signup\">Signup</Link>\n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                            <Link onClick={this.closeNav} to=\"/account\">Account</Link>\n                            <Link onClick={this.closeNav} to=\"/logout\">Logout</Link>\n                        </React.Fragment>\n                    }\n                </div>\n            </div>}\n        </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.auth.isLoggedIn\n    }\n};\nexport default connect(mapStateToProps)(StickyNavbar);","import React, {Component} from 'react';\nimport classes from './pageheader.module.css';\n\nclass PageHeader extends Component {\n    render() {\n        return (\n            <div className={classes.PageHeader}>\n                <h5>{this.props.title}</h5>\n            </div>\n        );\n    }\n}\n\nexport default PageHeader;","import axios from 'axios';\n\nexport const sendLoginRequest = async (userCreds) => {\n    return (\n        axios.post('/api/v1/auth/login', userCreds)\n            .then(res => {\n                return res.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n\nexport const signup = async (userCreds) => {\n    return (\n        axios.post('/api/v1/auth/register', userCreds)\n            .then(res => {\n                console.log(res)\n                return res.data;\n            })\n            .catch(err => console.log(err))\n    )\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport classes from '../auth.module.css';\nimport {Link, Redirect} from \"react-router-dom\";\nimport PageHeader from \"../../../UI/PageHeader/PageHeader\";\nimport Button from \"../../../UI/Button/Button\";\nimport {sendLoginRequest} from \"../../../utils/AuthQueries\";\nimport * as authActions from '../../../store/actions/index';\n\nclass Login extends Component {\n    state = {\n        loginForm: {\n            email: {\n                value: '',\n            },\n            password: {\n                value: '',\n            }\n        },\n        errors:null,\n    };\n\n    inputChangeHandler = (event) => {\n        const input = event.target.id;\n        const currentValue = event.target.value;\n        this.setState(prevState => {\n            const updatedForm = {\n                ...prevState.loginForm,\n                [input]: {\n                    ...prevState.loginForm[input],\n                    value: currentValue\n                }\n            };\n            return {loginForm: updatedForm, errors: null};\n        });\n    };\n\n    loginHandler = async (event, data) => {\n        event.preventDefault();\n        const request_body = {\n            email: data.email,\n            password: data.password,\n        }\n        const response = await sendLoginRequest(request_body);\n        if(response){\n            const token = response.token\n            const userId = response.userId\n            const userData = {\n                userAccessToken: token,\n                userId: userId\n            }\n            this.props.setUserData(userData);\n        }\n        else{\n            this.setState({errors: \"Incorrect email or password.\"});\n            return null;\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader title={\"Login\"}/>\n                <div className={classes.Error}>\n                    {this.state.errors}\n                </div>\n                <div className={classes.Auth}>\n                    <form onSubmit={e => this.loginHandler(e, {\n                        email: this.state.loginForm.email.value,\n                        password: this.state.loginForm.password.value\n                    })}>\n                        <label>Email address</label>\n                        <input\n                            id=\"email\"\n                            type=\"email\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Enter email\"\n                            value={this.state.loginForm['email'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <label>Password</label>\n                        <input\n                            id=\"password\"\n                            type=\"password\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            value={this.state.loginForm['password'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <Button type={'submit'} title={'Login'} Inverted={true} />\n                        <Link to={'/reset-password'}>Forgot Password?</Link>\n                        {this.props.redirect ?  <p>New User? <Link to={'/signup'}>Signup</Link></p> : null}\n                    </form>\n                    {this.props.redirect ? this.props.isLoggedIn ? <Redirect to=\"/mybeats\"/> : null : null}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        accessToken: state.auth.userAccessToken,\n        isLoggedIn: state.auth.isLoggedIn,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserData: (userData) => dispatch(authActions.setUserData(userData)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import * as actionTypes from '../actions/actionTypes';\n\nexport const setUserData = (userData) => {\n    return {\n        type:actionTypes.SET_USER_DATA,\n        userData: userData\n    };\n};\n\nexport const userLogout = () => {\n    return {\n        type:actionTypes.USER_LOGOUT,\n    };\n};\n","import React, {Component} from 'react';\nimport PageHeader from \"../../../UI/PageHeader/PageHeader\";\nimport classes from \"../auth.module.css\";\nimport Button from \"../../../UI/Button/Button\";\n\nclass ResetPassword extends Component {\n    state = {\n        forgotPasswordForm: {\n            email: {\n                value: '',\n            }\n        },\n        errors:null,\n        success:null\n    };\n\n    inputChangeHandler = (event) => {\n        const input = event.target.id;\n        const currentValue = event.target.value;\n        this.setState(prevState => {\n            const updatedForm = {\n                ...prevState.forgotPasswordForm,\n                [input]: {\n                    ...prevState.forgotPasswordForm[input],\n                    value: currentValue\n                }\n            };\n            return {forgotPasswordForm: updatedForm, errors: null};\n        });\n    };\n\n    forgotPasswordHandler = async (event, data) => {\n        event.preventDefault();\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader title={\"Forgot Password\"}/>\n                <div className={classes.Error}>\n                    {this.state.errors}\n                </div>\n                <div className={classes.Success}>\n                    {this.state.success}\n                </div>\n                <div className={classes.Auth}>\n                    <form onSubmit={e => this.forgotPasswordHandler(e, {\n                        email: this.state.forgotPasswordForm.email.value,\n                    })}>\n                        <label>Email address</label>\n                        <input\n                            id=\"email\"\n                            type=\"email\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Enter email\"\n                            value={this.state.forgotPasswordForm['email'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <Button type={'submit'} title={'Reset Password'} Inverted={true} />\n                    </form>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResetPassword;","import {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport * as authActions from \"../../../store/actions\";\n\nimport React, {Component} from 'react';\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.userLogout()\n    }\n\n    render() {\n        return (\n            <div>\n                <Redirect to='/'/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userLogout: () => dispatch(authActions.userLogout()),\n    }\n};\nexport default connect(null,mapDispatchToProps)(Logout);\n","import React, {Component} from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport classes from '../auth.module.css';\nimport PageHeader from \"../../../UI/PageHeader/PageHeader\";\nimport Button from \"../../../UI/Button/Button\";\nimport {signup} from \"../../../utils/AuthQueries\";\n\nclass Signup extends Component {\n    state = {\n        signupForm: {\n            userName: {\n                value: '',\n            },\n            email: {\n                value: '',\n            },\n            password: {\n                value: '',\n            },\n            confirmedPassword: {\n                value: '',\n            }\n        },\n        isSignedUp: false,\n        errors: null,\n        success: null,\n    };\n\n    inputChangeHandler = (event) => {\n        const input = event.target.id;\n        const currentValue = event.target.value;\n        this.setState(prevState => {\n            const updatedForm = {\n                ...prevState.signupForm,\n                [input]: {\n                    ...prevState.signupForm[input],\n                    value: currentValue\n                }\n            };\n            return {signupForm: updatedForm, errors: null};\n        });\n    };\n\n    signupHandler = async (event, data) => {\n        event.preventDefault();\n        const request_body = {\n            name: data.userName,\n            email: data.email,\n            password: data.password,\n            confirmPassword: data.confirmedPassword,\n        }\n        const response = await signup(request_body);\n        if(response){\n            this.setState({success: \"Successfully Signed up!\"});\n        }\n        else{\n            this.setState({errors: \"Something went wrong during signup.\"});\n            return null;\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <PageHeader title={\"Signup\"}/>\n                <div className={classes.Error}>\n                    {this.state.errors}\n                </div>\n                <div className={classes.Success}>\n                    {this.state.success}\n                </div>\n                <div className={classes.Auth}>\n                    <form onSubmit={e => this.signupHandler(e, {\n                        userName: this.state.signupForm.userName.value,\n                        email: this.state.signupForm.email.value,\n                        password: this.state.signupForm.password.value,\n                        confirmedPassword: this.state.signupForm.confirmedPassword.value,\n                    })}>\n                        <label>User Name</label>\n                        <input\n                            id=\"userName\"\n                            type=\"name\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Enter User Name\"\n                            value={this.state.signupForm['userName'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <label>Email address</label>\n                        <input\n                            id=\"email\"\n                            type=\"email\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Enter email\"\n                            value={this.state.signupForm['email'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <label>Password</label>\n                        <input\n                            id=\"password\"\n                            type=\"password\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            value={this.state.signupForm['password'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <label>Confirm Password</label>\n                        <input\n                            id=\"confirmedPassword\"\n                            type=\"password\"\n                            control=\"input\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            value={this.state.signupForm['confirmedPassword'].value}\n                            onChange={this.inputChangeHandler}\n                        />\n                        <Button type={'submit'} title={'Signup'} Inverted={true} />\n                    </form>\n                    {this.props.redirect ? this.state.isSignedUp ? <Redirect to=\"/login\"/> : null : null}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Signup;","import React, {Component} from 'react';\nimport classes from '../auth.module.css';\nimport PageHeader from \"../../../UI/PageHeader/PageHeader\"\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"../../../UI/Button/Button\";\n\nclass Account extends Component {\n    state = {\n        userForm: {\n            userName: {\n                value: '',\n            },\n            email: {\n                value: '',\n            },\n        },\n        id: null,\n        redirect: false,\n        success: null\n    };\n    \n    async componentWillMount () {\n\n    };\n    \n    inputChangeHandler = (event) => {\n        const input = event.target.id;\n        const currentValue = event.target.value;\n        this.setState(prevState => {\n            const updatedForm = {\n                ...prevState.userForm,\n                [input]: {\n                    ...prevState.userForm[input],\n                    value: currentValue\n                }\n            };\n            return {userForm: updatedForm,errors: null, success:null};\n        });\n    };\n\n    submitHandler = async (event, data) => {\n        event.preventDefault();\n\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.redirect ? <Redirect to=\"/login\"/> : null}\n                <PageHeader title=\"Account\"/>\n                    <div className={classes.Error}>\n                        {this.state.errors}\n                    </div>\n                    <div className={classes.Success}>\n                        {this.state.success}\n                    </div>\n                    <div className={classes.Auth}>\n                        <form  onSubmit={e => this.submitHandler(e,{\n                            userName : this.state.userForm.userName.value,\n                            email: this.state.userForm.email.value,\n                        })}>\n                            <label>User Name</label>\n                            <input\n                                id=\"userName\"\n                                type=\"name\"\n                                control=\"input\"\n                                className=\"form-control\"\n                                placeholder=\"Enter First Name\"\n                                value={this.state.userForm['userName'].value}\n                                onChange={this.inputChangeHandler}\n                            />\n                            <label>Email address</label>\n                            <input\n                                id=\"email\"\n                                type=\"email\"\n                                control=\"input\"\n                                className=\"form-control\"\n                                placeholder=\"Enter email\"\n                                value={this.state.userForm['email'].value}\n                                onChange={this.inputChangeHandler}\n                            />\n                            <Button type={'submit'} title={'Update Information'} Inverted={true} />\n                        </form>\n\n                    </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        accessToken: state.auth.userAccessToken,\n        isLoggedIn: state.auth.isLoggedIn,\n    }\n};\n\nexport default connect(mapStateToProps)(Account);","import React from 'react';\nimport './pushbutton.scss'\n\nconst PushButton = () => {\n    return (\n        <button className=\"button\">Play</button>\n    );\n};\n\nexport default PushButton;\n","import './midicard.css';\nimport {convertMidiSequenceToPattern} from \"../../../../utils/MidiUtils\";\nimport {Link} from \"react-router-dom\";\nimport * as midiActions from '../../../../store/actions';\nimport React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport Radium, {StyleRoot} from 'radium';\nimport { fadeIn } from 'react-animations';\nimport PushButton from \"../../../../UI/PushButton/PushButton\";\n\nconst styles = {\n    fadeIn: {\n        animation: 'x 1s',\n        animationName: Radium.keyframes(fadeIn, 'fadeIn')\n    }\n}\n\nclass MidiCard extends Component {\n    state = {\n        id: this.props.id,\n        name: this.props.name,\n        tempo: this.props.tempo,\n        length: this.props.length,\n        authorId: this.props.authorId,\n        authorName: this.props.authorName,\n        seq: this.props.sequence,\n        url: this.props.url,\n        genre: this.props.genre,\n        pattern: [],\n    }\n\n    handlePlayDrumSequencer = () => {\n        const isUpdateable = this.props.userId === this.state.authorId;\n        const pattern = convertMidiSequenceToPattern(this.state.seq, this.state.length);\n        const midiData = {\n            bpm: this.state.tempo,\n            totalSteps: this.state.length,\n            pattern: pattern,\n            url: this.state.url,\n            isDownloadable: true,\n            isUpdateable: isUpdateable,\n            sequence_title: this.state.name,\n            midiId: this.props.id,\n            authorName: this.state.authorName,\n\n        }\n        this.props.setMidiSequencerData(midiData);\n    }\n\n    render() {\n        return (\n                <div className=\"MidiCard\"  style={styles.fadeIn}>\n                    <h4>{this.state.name}</h4>\n                    <div className=\"DescriptionItem\">\n                        <h5>Tempo: </h5>\n                        <p> {this.state.tempo}</p>\n                    </div>\n                    <div className=\"DescriptionItem\">\n                        <h5>Length: </h5>\n                        <p> {this.state.length}</p>\n                    </div>\n                    <div className=\"DescriptionItem\">\n                        <h5>Author: </h5>\n                        <p> {this.state.authorName}</p>\n                    </div>\n                    <div className=\"DescriptionItem\">\n                        <h5>Genre: </h5>\n                        <p> {this.state.genre}</p>\n                    </div>\n                   <Link onClick={this.handlePlayDrumSequencer} to={'/sequencer'} ><PushButton/></Link>\n                    {this.props.userId === this.state.authorId ?\n                        <button className=\"DeleteButton\" type=\"button\" onClick={() => this.props.onDelete(this.state.id, this.props.userId)}>\n                            <i className=\"fa fa-trash fa-1x\" aria-hidden=\"true\"></i>\n                        </button>\n                        :\n                        null\n                    }\n                </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMidiSequencerData: (midiData) => dispatch(midiActions.setMidiSequencerData(midiData))\n    }\n};\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MidiCard);\n","import React from 'react';\nimport './collectionheader.scss'\n\nconst CollectionHeader = (props) => {\n    return (\n        <div className='CollectionHeader'>\n            <h1 data-heading={props.title}/>\n        </div>\n    );\n};\n\nexport default CollectionHeader;","import React, {Component} from 'react';\nimport \"./jukebox.scss\";\nimport {deleteMidiFile, getMidiFiles} from \"../../utils/MidiQueries\";\nimport MidiCard from \"../../components/Midi/MidiCards/MidiCard/MidiCard\";\nimport CollectionHeader from \"../../UI/CollectionHeader/CollectionHeader\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nclass Jukebox extends Component {\n    state = {\n        THRESHOLD : 0.6,\n        MAX_SPEED : 10,\n        LEFT : 'left',\n        RIGHT : 'right',\n        midiFiles: [],\n        isLoading:false\n    }\n\n    async componentDidMount() {\n        this.enableGalleryScroll();\n        this.setState({isLoading:true})\n        const data = await getMidiFiles(this.props.filterParams);\n        if(data){\n            this.setState({midiFiles:data, isLoading:false})\n        }\n    }\n\n    enableGalleryScroll = () => {\n        var gallery = document.getElementById('gallery_' + this.props.title);\n        gallery.onmouseover = (event) => {\n            const pageX = event.clientX || event.screenX;\n            const screenWidth = window.innerWidth;\n            var currentPosPercentage = (screenWidth - pageX) / screenWidth;\n            var speed;\n            if (currentPosPercentage > this.state.THRESHOLD ) {\n                speed = this.calculateSpeed(this.state.LEFT, currentPosPercentage);\n                this.setScroll(gallery, this.state.LEFT, speed)\n            } else if (currentPosPercentage < (1 - this.state.THRESHOLD)) {\n                speed = this.calculateSpeed(this.state.RIGHT, currentPosPercentage);\n                this.setScroll(gallery, this.state.RIGHT, speed)\n            } else {\n                this.endScroll();\n            }\n        }\n    }\n\n    calculateSpeed = (direction, ratio) => {\n        var positionPercentage = direction === this.state.LEFT ? ratio : 1 - ratio,\n            speedPercentage = (positionPercentage - this.state.THRESHOLD) / (1 - this.state.THRESHOLD);\n        return speedPercentage * this.state.MAX_SPEED;\n    }\n\n    endScroll = () => {\n        clearInterval(this.scrolling);\n    }\n\n    setScroll = (object, direction, speed) => {\n        this.endScroll();\n        this.scrolling = setInterval(() => {\n            var newPos = direction === this.state.LEFT ? (-1 * speed) : speed;\n            object.scrollLeft += newPos\n        }, 10);\n    }\n\n    handleDeletePattern = async (id, userId) => {\n        const response = await deleteMidiFile(id, userId);\n        console.log(response)\n        if(response){\n            console.log(this.state)\n            const midiFilesCopy = [...this.state.midiFiles];\n            const midiFilesUpdated = midiFilesCopy.filter(midifile =>{\n                return midifile._id.toString() !== id;\n            })\n            this.setState({midiFiles:midiFilesUpdated})\n        }\n        else{\n            alert(\"Could Not Delete Midi File. Please Try Again.\")\n        }\n    }\n\n    midiFileElements = () => {\n        if (this.state.midiFiles.length > 0){\n            return this.state.midiFiles.map((midifile, index) => {\n                return (\n                    <MidiCard\n                        key={midifile._id}\n                        id={midifile._id}\n                        name={midifile.name}\n                        tempo={midifile.tempo}\n                        length={midifile.length}\n                        authorId={midifile.author}\n                        sequence={midifile.midi_sequence}\n                        url={midifile.url}\n                        onDelete={this.handleDeletePattern}\n                        authorName={midifile.author_name}\n                        genre={midifile.genre}\n                    />\n                )\n            })\n        }\n        else{\n            return <h1>No Beats Available</h1>\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"Jukebox\">\n                <CollectionHeader title={this.props.title}/>\n                <div className=\"gallery centerized\" id={\"gallery_\" + this.props.title}>\n                    {this.state.isLoading ?\n                        <Spinner/>\n                        :\n                        this.midiFileElements()\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Jukebox;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport JukeBox from \"../JukeBox/Jukebox\";\n\nconst MyBeats = (props) => {\n    return (\n        <div>\n            {props.isLoggedIn ?\n                <JukeBox filterParams={{limit: 50, author: props.userId }} title={\"My Beats\"}/>\n                :\n                <h1>Please Login to View Your Beats.</h1>\n            }\n        </div>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId,\n        isLoggedIn: state.auth.isLoggedIn\n    }\n};\nexport default connect(mapStateToProps)(MyBeats);\n","import React, {useState, useEffect} from 'react';\nimport JukeBox from \"../JukeBox/Jukebox\";\nimport {getUniqueMidiFileFieldValues} from \"../../utils/MidiQueries\";\n\n//TODO sort by most populate genre top to bottom\nconst MidiCollections = () => {\n    const [genres, setGenres] = useState([]);\n     useEffect( () => {\n         async function getAllGenres() {\n             const all_genres = await getUniqueMidiFileFieldValues(\"genre\");\n             setGenres(all_genres);\n         }\n         getAllGenres();\n     }, []);\n    const genreElements = genres.map(genre => {\n        return <JukeBox filterParams={{limit: 50, genre: genre}} title={genre}/>\n    });\n    return (\n        <React.Fragment >\n            <JukeBox filterParams={{limit: 50}} title={\"All Beats\"}/>\n            {genreElements}\n        </React.Fragment>\n    );\n};\n\nexport default MidiCollections;\n","import React, {Component} from 'react';\nimport './App.css';\nimport DrumSequencer from \"./components/DrumSequencer/DrumSequencer\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Login from \"./components/Auth/Login/Login\";\nimport ResetPassword from \"./components/Auth/ResetPassword/ResetPassword\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport Signup from \"./components/Auth/Signup/Signup\";\nimport Account from \"./components/Auth/Account/Account\";\nimport MyBeats from \"./containers/MyBeats/MyBeats\";\nimport MidiCollections from \"./containers/MidiCollections/MidiCollections\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className='App' >\n            <Navbar/>\n            <Switch>\n                <Route path='/login' render={() => <Login redirect={true} />} />\n                <Route path='/reset-password' render={() => <ResetPassword/>} />\n                <Route path='/logout' render={() => <Logout/>} />\n                <Route path='/signup' render={() => <Signup redirect={true} />} />\n                <Route path='/account' render={() => <Account/>}/>\n                <Route path={\"/sequencer\"} render={() => <DrumSequencer pattern={[]} totalSteps={8}/>}/>\n                <Route path={\"/mybeats\"} render={() => <MyBeats/>}/>\n                <Route path='/' exact render={() =><MidiCollections/>}/>\n            </Switch>\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    bpm: 120,\n    totalSteps: 8,\n    pattern: [],\n    url: \"\",\n    isDownloadable: false,\n    isUpdateable: false,\n    sequence_title: \"\",\n    midiId: \"\",\n    authorName: \"\",\n\n};\n\nconst reducer = (state= initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_MIDI_SEQUENCER_DATA:\n            return {\n                ...state,\n                bpm: action.midiData.bpm,\n                totalSteps: action.midiData.totalSteps,\n                pattern: action.midiData.pattern,\n                url: action.midiData.url,\n                isDownloadable: action.midiData.isDownloadable,\n                isUpdateable: action.midiData.isUpdateable,\n                sequence_title: action.midiData.sequence_title,\n                midiId: action.midiData.midiId,\n                authorName: action.midiData.authorName,\n            };\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n        userId: \"\",\n        userAccessToken: \"\",\n        isLoggedIn: false\n};\n\nconst reducer = (state= initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.SET_USER_DATA:\n            return {\n                ...state,\n                userAccessToken: action.userData.userAccessToken,\n                userId: action.userData.userId,\n                isLoggedIn: true\n            };\n        case actionTypes.USER_LOGOUT:\n            return {\n                ...state,\n                userAccessToken: \"\",\n                userId: \"\",\n                isLoggedIn: false\n            };\n        default:\n            return {...state};\n    }\n};\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport midiReducer from './midi';\nimport authReducer from './auth';\n\nexport default combineReducers({\n    midi:midiReducer,\n    auth:authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport rootReducer from './store/reducers/';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrumSequencer\":\"drumseqencer_DrumSequencer__356U_\",\"Transport\":\"drumseqencer_Transport__2aVMq\",\"TransportItem\":\"drumseqencer_TransportItem__1jisy\",\"TransportItemInput\":\"drumseqencer_TransportItemInput__3OuqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBar\":\"navbar_MainBar__2DwDF\",\"MainBarSticky\":\"navbar_MainBarSticky__2A5Ww\",\"MainLogoImg\":\"navbar_MainLogoImg__3vUBN\",\"Navbar\":\"navbar_Navbar__2TIKV\",\"NavbarLeft\":\"navbar_NavbarLeft__2N1I2\",\"NavbarMiddle\":\"navbar_NavbarMiddle__2IFQd\",\"NavbarRight\":\"navbar_NavbarRight__2e6wh\",\"NavbarMobile\":\"navbar_NavbarMobile__1rm6Z\",\"NavbarMobileItems\":\"navbar_NavbarMobileItems__3vCZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal_Modal__32OQn\",\"ModalBody\":\"modal_ModalBody__2X9tU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SaveForm\":\"save_SaveForm__2Y26K\",\"Error\":\"save_Error__CdzRI\",\"Success\":\"save_Success__StVNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__3xIb-\",\"InvertedButton\":\"button_InvertedButton__3cKSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NumberInput\":\"numberinput_NumberInput__18TWF\",\"Arrows\":\"numberinput_Arrows__8nRi0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"logo_Logo__24er2\"};","module.exports = __webpack_public_path__ + \"static/media/midi_mason_logo_white.0e6ccc6b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageHeader\":\"pageheader_PageHeader__1a3xc\"};"],"sourceRoot":""}